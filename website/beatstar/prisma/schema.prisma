// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  uuid      String  @unique @db.Uuid
  username  String  @unique
  password  String
  admin     Boolean @default(false)
  starCount Int     @default(0)
  Score     Score[]
}

model Score {
  beatmapId         Int
  normalizedScore   Float
  absoluteScore     Int
  highestGrade      Int
  highestCheckpoint Int
  highestStreak     Int
  //bragState
  playedCount       Int

  user    User    @relation(fields: [userId], references: [id])
  beatmap Beatmap @relation(fields: [beatmapId], references: [id])
  userId  Int

  @@id([userId, beatmapId])
}

model Beatmap {
  id         Int     @id
  idLabel    String
  difficulty Int
  deluxe     Boolean

  scores Score[]
}

model Cms {
  name String @id
  data Json
  gzip Bytes
  hash String @db.Char(32)
}

model News {
  type           Int
  legacyId       Int
  viewType       NewsType
  startTimeMsecs DateTime
  endTimeMsecs   DateTime
  order          Int
  image          Image    @relation(fields: [imageId], references: [id])
  title          String
  status         Int
  id             String   @id @db.Char(32)
  content        String
  requirements   String
  imageId        String   @db.Uuid
}

model Image {
  id         String @unique @db.Uuid
  url        String
  width      Int
  height     Int
  rectWidth  Int
  rectHeight Int
  News       News[]
}

enum NewsType {
  TEXT
}
